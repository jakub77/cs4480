import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.net.UnknownHostException;

public class ThreadedClient implements Runnable
	{
		private Socket client;
		
		public ThreadedClient(Socket parameter)
		{
			client = parameter;
		}
		
		public void run()
		{
			System.out.println("New Thread Started");
			Socket server = null;
			HttpRequest request = null;
			HttpResponse response = null;

			/*
			 * Process request. If there are any exceptions, then simply return and
			 * end this request. This unfortunately means the client will hang for a
			 * while, until it timeouts.
			 */

			/* Read request */
			try
			{
				BufferedReader fromClient = new BufferedReader(new InputStreamReader(client.getInputStream()));
				request = new HttpRequest(fromClient);
				if(request.nullRequest)
				{
					return;			
				}
			}
			catch (IOException e)
			{
				System.out.println("Error reading request from client: " + e);
				return;
			}

			/* Send request to server */
			try
			{
				/* Open socket and write request to socket */
				server = new Socket(request.getHost(), request.getPort());
				DataOutputStream toServer = new DataOutputStream(server.getOutputStream());
				String reqString = request.toString();
				toServer.write(reqString.getBytes("UTF-8"));
				System.out.println("Sent Request String\n---\n" + reqString + "---\n");
			}
			catch (UnknownHostException e)
			{
				System.out.println("Unknown host: " + request.getHost());
				System.out.println(e);
				return;
			}
			catch (IOException e)
			{
				System.out.println("Error writing request to server: " + e);
				return;
			}

			/* Read response and forward it to client */
			try
			{     
				//BufferedReader fromServer = new BufferedReader(new InputStreamReader(server.getInputStream()));
				DataInputStream fromServer = new DataInputStream(server.getInputStream());
				response = new HttpResponse(fromServer);
				DataOutputStream toClient = new DataOutputStream(client.getOutputStream());
				//String rep = response.statusLine + "\r\n" + response.headers + response.bodyString;
				//toClient.write(rep.getBytes("UTF-8"));
				//toClient.write(response.bodyString.getBytes("UTF-8"));

				try
				{
					toClient.write(response.toString().getBytes("UTF-8"));
					toClient.write(response.body);
				}
				catch(Exception e)
				{
					System.out.println("Failed Write");
				}
				//String res = response.toString() + new String(response.body, "UTF-8");
				//toClient.write(res.getBytes("UTF-8"));			
				//toClient.write(response.body);
				//String s = new String(response.body);
				//String s2 = response.headers;

				/* Fill in */
				/* Write response to client. First headers, then body */
				client.close();
				server.close();
				/* Insert object into the cache */
				/* Fill in (optional exercise only) */
			}
			catch (IOException e)
			{
				System.out.println("Error writing response to client: " + e);
			}
		}
	}